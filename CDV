Sub CDV()
    Dim xSh As Worksheet
    Application.ScreenUpdating = False
    For Each xSh In Worksheets
        xSh.Select
        Call CDV_1
        Call CDV_Grupos_Especiales_Check
    Next
    Application.ScreenUpdating = True
End Sub

Private Sub CDV_1()
'
' CDV_1 Macro
'

'Inserta línea encima

    Rows("1:1").Select
    Selection.Insert Shift:=xlDown

'Selecciona la segunda línea y le formato fecha
    Rows("2:2").Select
    Selection.NumberFormat = "d-m;@"
    
'Selecciona las 2 primeras líneas y les da formato negrita y centrado
    Rows("1:2").Select
    With Selection
        .Font.Bold = True
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'Aplica la fórmula para determinar la inicial del día de la semana
    Range("D1").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(+WEEKDAY(R[1]C,2)=1,""L"",IF(+WEEKDAY(R[1]C,2)=2,""M"",IF(+WEEKDAY(R[1]C,2)=3,""X"",IF(+WEEKDAY(R[1]C,2)=4,""J"",IF(+WEEKDAY(R[1]C,2)=5,""V"",IF(+WEEKDAY(R[1]C,2)=6,""S"",IF(+WEEKDAY(R[1]C,2)=7,""D"",)))))))"
    Range("D1").Select
    Selection.Copy
    Range("E1:IT1").Select
    ActiveSheet.Paste
    
    'Pinta de gris las 3 primeras columnas y las 2 primeras filas
    Columns("A:C").Select
    Application.CutCopyMode = False
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.349986266670736
        .PatternTintAndShade = 0
    End With
    
    Rows("1:2").Select
    With Selection.Interior
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -0.349986266670736
        .PatternTintAndShade = 0
    End With
    
    'Aplica tinte amarillo a los Sábados
    Range("D1").Select
    Range(Selection, Selection.End(xlToRight)).Select
    Selection.FormatConditions.Add Type:=xlCellValue, Operator:=xlEqual, _
        Formula1:="=""S"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65535
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
'    Range("D2").Select
'    Range(Selection, Selection.End(xlToRight)).Select
    Range("D2").Select
    Selection.FormatConditions.Add Type:=xlExpression, Formula1:="=D$1=""S"""
    Selection.FormatConditions(Selection.FormatConditions.Count).SetFirstPriority
    With Selection.FormatConditions(1).Interior
        .PatternColorIndex = xlAutomatic
        .Color = 65535
        .TintAndShade = 0
    End With
    Selection.FormatConditions(1).StopIfTrue = False
    Selection.AutoFill Destination:=Range("D2:IT2"), Type:=xlFillDefault
    Range("D2:IT2").Select
    Range("D3").Select
    ActiveWindow.ScrollColumn = 2
    ActiveWindow.ScrollColumn = 1
    ActiveWindow.FreezePanes = True
    Range("A1").Select
End Sub

Private Sub CDV_Grupos_Especiales_Check()


Dim grupo As Range, dia As Integer, Var As Integer

'Application.ScreenUpdating = False

Range("B:B").UnMerge

For Each grupo In Range("B1:B400")

    If grupo = "VV" Or grupo = "V" Or grupo = "G" Or grupo = "P" Or grupo = "PP" Or grupo = "J" Or grupo = "JJ" Or grupo = "I" Or grupo = "K" Or grupo = "DD" Or grupo = "C1" Or grupo = "E" Or grupo = "FF" Then      'Comprueba si la celda corresponde a un grupo especial
        
        dia = 0
        Var = 0
        
        grupo.Offset(8, 0).EntireRow.Insert                                     'Inserta una nueva línea donde calculará la disponibilidad real, teniendo en cuenta el retraso en las entradas
        grupo.Offset(8, 1).Value = "Disponibilidad Real " & grupo
        grupo.Offset(8, 1).Interior.Color = vbYellow
        grupo.Offset(8, 1).Font.Bold = True
        Range("C:C").EntireColumn.AutoFit
        
            
            While Var < 60
        
                With grupo
                    .Offset(8, 2) = grupo.Offset(7, 0) + grupo.Offset(0, 2) + grupo.Offset(0, 3) - grupo.Offset(1, 2) - grupo.Offset(2, 2) - grupo.Offset(3, 2) + grupo.Offset(5, 2) - grupo.Offset(6, 2)    'Calcula el stock del día actual
                    .Offset(8, 3 + Var) = .Offset(8, 2 + Var) + .Offset(0, 4 + Var) - .Offset(1, 3 + Var) - grupo.Offset(2, 3 + Var) - grupo.Offset(3, 3 + Var) + grupo.Offset(5, 3 + Var) - grupo.Offset(6, 3 + Var)    'Calcula el stock para el resto de días
                End With
              
        Var = Var + 1
        
            Wend
        
        Var = 0
        
            While dia < 60              'Aplica la condición en la que si el stock del día es inferior a las salidas del día siguiente, remarca la celda.

                If grupo.Offset(8, 2 + dia) < grupo.Offset(1, 3 + dia) Then

                    With grupo.Offset(8, 2 + dia)

                    .Font.Bold = True
                    .Font.Color = vbRed
                    .Borders.Color = vbRed

                    End With

                End If

            dia = dia + 1

            Wend
'
    
    End If
    
	
	    If grupo = "LK" Or grupo = "RK"  Then      'Comprueba si la celda corresponde a un grupo especial
        
        dia = 0
        Var = 0
        
        grupo.Offset(8, 0).EntireRow.Insert                                     'Inserta una nueva línea donde calculará la disponibilidad real, teniendo en cuenta el retraso en las entradas
        grupo.Offset(8, 1).Value = "Disponibilidad Real " & grupo
        grupo.Offset(8, 1).Interior.Color = vbYellow
        grupo.Offset(8, 1).Font.Bold = True
        Range("C:C").EntireColumn.AutoFit
        
            
            While Var < 60
        
                With grupo
                    .Offset(8, 2) = grupo.Offset(7, 0) + grupo.Offset(0, 3) - grupo.Offset(2, 2) - grupo.Offset(3, 2) + grupo.Offset(5, 2) - grupo.Offset(6, 2)    'Calcula el stock del día actual
                    .Offset(8, 3 + Var) = .Offset(8, 2 + Var) + .Offset(0, 4 + Var) - .Offset(1, 2 + Var) - grupo.Offset(2, 3 + Var) - grupo.Offset(3, 3 + Var) + grupo.Offset(5, 3 + Var) - grupo.Offset(6, 3 + Var)    'Calcula el stock para el resto de días
                End With
              
        Var = Var + 1
        
            Wend
        
        Var = 0
        
            While dia < 60              'Aplica la condición en la que si el stock del día es inferior a las salidas del día siguiente, remarca la celda.

                If grupo.Offset(8, 2 + dia) < grupo.Offset(1, 3 + dia) Then

                    With grupo.Offset(8, 2 + dia)

                    .Font.Bold = True
                    .Font.Color = vbRed
                    .Borders.Color = vbRed

                    End With

                End If

            dia = dia + 1

            Wend
'
    
    End If
	

Next

'Application.ScreenUpdating = True

'MsgBox ("Búsqueda y revisión de la disponibilidad de los grupos especiales realizada.")

End Sub

